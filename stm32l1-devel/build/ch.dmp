
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000100

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002114 memsz 0x00002118 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08002118 align 2**15
         filesz 0x00000000 memsz 0x00000398 flags rw-
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000f4  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002014  08000100  08000100  00008100  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002114  08002114  0000a114  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00010000  2**0
                  ALLOC
  4 .bss          00000398  20000800  08002118  00010800  2**3
                  ALLOC
  5 .debug_info   0000f6b3  00000000  00000000  0000a114  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003d64  00000000  00000000  000197c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 000008e0  00000000  00000000  0001d52b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000f60  00000000  00000000  0001de0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00004abb  00000000  00000000  0001ed6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000020b5  00000000  00000000  00023826  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000011  00000000  00000000  000258db  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000033  00000000  00000000  000258ec  2**0
                  CONTENTS, READONLY
 13 .debug_frame  000014e4  00000000  00000000  00025920  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000051ae  00000000  00000000  00026e04  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000100 l    d  .text	00000000 .text
08002114 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
080002f4 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000800 l     O .bss	00000048 mainthread.4772
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000610 l     F .text	0000005c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000b90 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000934 l     O .bss	00000004 endmem
20000938 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000940 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 serial.c
08000f20 l     F .text	00000006 readt
08000f30 l     F .text	0000000a read
08000f40 l     F .text	00000006 writet
08000f50 l     F .text	0000000a write
08000f60 l     F .text	00000006 gett
08000f70 l     F .text	0000000a get
08000f80 l     F .text	00000006 putt
08000f90 l     F .text	0000000a put
08001fa0 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 tm.c
08001130 l     F .text	0000000e tm_start
08001140 l     F .text	00000030 tm_stop
20000960 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 stm32_dma.c
20000964 l     O .bss	00000038 dma_isr_redir
2000099c l     O .bss	00000004 dma_streams_mask
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
080016a0 l     F .text	0000000a spi_lld_serve_tx_interrupt
080016b0 l     F .text	00000070 spi_lld_serve_rx_interrupt
200009b0 l     O .bss	00000002 dummytx
200009e4 l     O .bss	00000002 dummyrx
00000000 l    df *ABS*	00000000 serial_lld.c
080018a0 l     F .text	00000014 notify1
080018c0 l     F .text	00000014 notify3
080018e0 l     F .text	00000126 serve_interrupt
08002020 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 spi_flash.c
08001b60 l     F .text	0000002e flashSleep
080020e0 l     O .text	0000000c spi1cfg
00000000 l    df *ABS*	00000000 chprintf.c
08001c50 l     F .text	0000004c long_to_string_with_divisor.constprop.0
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 
08002118 l       .textalign	00000000 _etext
00000000 l       *UND*	00000000 chEvtClearFlags
0000c000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
2000c000 l       *ABS*	00000000 __ram_end__
20000b98 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08002030 g     O .text	000000a8 pal_default_config
080002d0  w    F .text	00000002 Vector58
080002d0  w    F .text	00000002 VectorE8
080002d0  w    F .text	00000002 Vector9C
08000410 g     F .text	00000048 nvicEnableVector
080002d0  w    F .text	00000002 VectorAC
080009c0 g     F .text	0000000a chThdExit
08000520 g     F .text	00000058 chSysTimerHandlerI
08000b60 g     F .text	00000022 chEvtBroadcastFlagsI
080006e0 g     F .text	00000040 chSchGoSleepTimeoutS
080009e0 g     F .text	000000c4 chMtxLockS
080002d0  w    F .text	00000002 Vector5C
08001820 g     F .text	00000012 spi_lld_select
080002d0  w    F .text	00000002 NMIVector
08000f10 g     F .text	0000000a gptObjectInit
08001310 g     F .text	0000003c dmaInit
080002d0  w    F .text	00000002 Vector8C
08001a30 g     F .text	00000016 VectorDC
08000000 g     O startup	000000f4 _vectors
080006b0 g     F .text	00000028 chSchGoSleepS
20000b98 g       .bss	00000000 __heap_base__
08000890 g     F .text	0000006c chThdCreateI
080002d0  w    F .text	00000002 VectorC8
08001840 g     F .text	00000012 spi_lld_unselect
08000720 g     F .text	00000058 chSchWakeupS
08001020 g     F .text	0000003c sdIncomingDataI
08000d70 g     F .text	00000046 chOQGetI
08000670 g     F .text	00000016 _scheduler_init
08000800 g     F .text	00000018 chSchRescheduleS
08000900 g     F .text	0000002a chThdCreateStatic
080002d0  w    F .text	00000002 Vector94
080002d0  w    F .text	00000002 VectorA8
08001480 g     F .text	00000030 VectorB4
08000690 g     F .text	00000020 chSchReadyI
080000f4 g       startup	00000000 __fini_array_end
080002e0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000580 g     F .text	00000018 _vt_init
080010c0 g     F .text	00000014 spiUnselect
08000eb0 g     F .text	00000020 _heap_init
08001220 g     F .text	0000002c Vector74
08000ed0 g     F .text	0000002a halInit
080002d0  w    F .text	00000002 VectorEC
20000800 g       .bss	00000000 _bss_start
08000780 g     F .text	00000040 chSchDoRescheduleBehind
080002d0  w    F .text	00000002 UsageFaultVector
2000c000 g       *ABS*	00000000 __heap_end__
080002d0  w    F .text	00000002 DebugMonitorVector
080002d0  w    F .text	00000002 Vector40
080001b0 g     F .text	00000118 ResetHandler
08000c80 g     F .text	00000072 chIQReadTimeout
080002d0  w    F .text	00000002 VectorBC
08000320 g     F .text	00000036 _port_init
080013d0 g     F .text	00000094 hal_lld_init
08001720 g     F .text	00000044 spi_lld_init
08000980 g     F .text	00000040 chThdExitS
080002d0  w    F .text	00000002 PendSVVector
080005a0 g     F .text	0000003c chVTSetI
080002d0  w    F .text	00000002 Vector64
20000b98 g       .bss	00000000 _bss_end
080001a0  w    F .text	00000002 _default_exit
080015e0 g     F .text	000000ba _pal_lld_setgroupmode
08001110 g     F .text	00000006 spiAcquireBus
080002d0  w    F .text	00000002 VectorCC
20000ac0 g     O .bss	000000d8 SD3
08001a50 g     F .text	0000004c sd_lld_init
080002d0  w    F .text	00000002 Vector54
080002d0  w    F .text	00000002 Vector98
080002d0  w    F .text	00000002 VectorD8
080002d0  w    F .text	00000002 Vector24
08000ab0 g     F .text	00000014 chMtxLock
08001770 g     F .text	000000ac spi_lld_start
08000820 g     F .text	00000014 chSchDoReschedule
080004b0 g     F .text	00000064 chSysInit
08000960 g     F .text	00000018 chThdSleep
08000bc0 g     F .text	0000001e chIQInit
08001fc0 g     O .text	00000054 _stm32_dma_streams
080012e0 g     F .text	0000002c Vector84
080003d0 g     F .text	0000001a SysTickVector
08001070 g     F .text	00000010 spiObjectInit
200009b4 g     O .bss	00000030 SPID1
08001470 g     F .text	00000002 stm32_clock_init
080014d0 g     F .text	00000110 _pal_lld_init
08000fa0 g     F .text	00000004 sdInit
080002d0  w    F .text	00000002 BusFaultVector
080002d0  w    F .text	00000002 VectorD0
08000e40 g     F .text	0000002c _core_init
200009a0 g     O .bss	00000010 GPTD3
08001000 g     F .text	0000001a sdStart
08001b90 g     F .text	000000c0 configureSPIFlash
080002d0  w    F .text	00000002 VectorE4
080002d0  w    F .text	00000002 VectorC0
080003f0 g     F .text	00000010 _port_switch
08000300 g     F .text	00000012 SVCallVector
08000190  w    F .text	00000002 __late_init
08000f00 g     F .text	00000004 gptInit
20000908 g     O .bss	00000010 vtlist
080002d0  w    F .text	00000002 HardFaultVector
08000360 g     F .text	00000070 _port_irq_epilogue
08000e70 g     F .text	00000034 chCoreAlloc
080002d0  w    F .text	00000002 VectorF0
080014b0 g     F .text	00000018 gpt_lld_init
08002118 g       .textalign	00000000 _textdata
080002d0  w    F .text	00000002 VectorE0
080002d0  w    F .text	00000002 MemManageVector
080000f4 g       startup	00000000 __fini_array_start
08000100 g     F .text	00000090 main
080011c0 g     F .text	0000002c Vector6C
20000918 g     O .bss	0000001c rlist
080002d0  w    F .text	00000002 VectorA0
08001060 g     F .text	00000004 spiInit
08001120 g     F .text	00000004 spiReleaseBus
080000f4 g       startup	00000000 __init_array_end
080002d0  w    F .text	00000002 VectorC4
08001280 g     F .text	0000002c Vector7C
080009d0 g     F .text	0000000a chMtxInit
08000490 g     F .text	00000014 _idle_thread
08000dc0 g     F .text	00000074 chOQWriteTimeout
080002d0  w    F .text	00000002 VectorB0
08001f80 g     O .text	00000016 ch_debug
08001ca0 g     F .text	000002c8 chprintf
080002d0  w    F .text	00000002 Vector90
08000b30 g     F .text	0000002e chEvtSignalI
08000400 g     F .text	00000010 _port_thread_start
080002d0  w    F .text	00000002 Vector60
080002d0  w    F .text	00000002 Vector1C
080007c0 g     F .text	0000003c chSchDoRescheduleAhead
080002d0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
080011f0 g     F .text	0000002c Vector70
08001a10 g     F .text	00000016 VectorD4
08000460 g     F .text	00000030 nvicSetSystemHandlerPriority
08001860 g     F .text	0000003a spi_lld_send
20000848 g     O .bss	000000c0 _idle_thread_wa
08000d00 g     F .text	0000001c chOQInit
08000c30 g     F .text	00000048 chIQGetTimeout
20000800 g       .bss	00000000 _data
080002d0  w    F .text	00000002 Vector4C
080012b0 g     F .text	0000002c Vector80
08000be0 g     F .text	0000004e chIQPutI
080002f0 g     F .text	00000006 _port_switch_from_isr
08001170 g     F .text	00000046 tmInit
080002d0  w    F .text	00000002 Vector68
08000ad0 g     F .text	0000005c chMtxUnlock
080010a0 g     F .text	00000014 spiSelect
080010e0 g     F .text	0000002c spiSend
20000400 g       .stacks	00000000 __main_stack_end__
08001250 g     F .text	0000002c Vector78
20000800 g       .bss	00000000 _edata
080005e0 g     F .text	00000024 chVTResetI
080002d0 g     F .text	00000002 _unhandled_exception
08000fb0 g     F .text	00000044 sdObjectInit
080002d0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000930 g     F .text	00000030 chThdSetPriority
080000f4 g       startup	00000000 __init_array_start
08001080 g     F .text	0000001c spiStart
200009e8 g     O .bss	000000d8 SD1
08000840 g     F .text	00000046 _thread_init
080002d0  w    F .text	00000002 Vector50
08001350 g     F .text	00000078 dmaStreamAllocate
08000d20 g     F .text	0000004e chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080002d0  w    F .text	00000002 Vector44
080002d0  w    F .text	00000002 Vector28
08001b50 g     F .text	00000002 boardInit
080002d0  w    F .text	00000002 VectorB8
08001aa0 g     F .text	000000a0 sd_lld_start
20000800 g       .stacks	00000000 __process_stack_end__
080002d0  w    F .text	00000002 Vector34
08001b40 g     F .text	00000004 __early_init
080002d0  w    F .text	00000002 VectorA4
080002d0  w    F .text	00000002 Vector20


